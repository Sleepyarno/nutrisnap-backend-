rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /users/{userId} {
      allow read: if request.auth != null && request.auth.uid == userId;
        allow write: if request.auth != null && request.auth.uid == userId && (
          (!('glucosePrediction' in request.resource.data) && !('metabolicAdvice' in request.resource.data)) ||
          (get(/databases/$(database)/documents/users/$(userId)).data.isPremium == true ||
           (get(/databases/$(database)/documents/users/$(userId)).data.subscriptionDetails.isActive == true))
        );
      match /scans/{scanId} {
        allow read: if request.auth != null && request.auth.uid == userId;
        allow write: if request.auth != null && request.auth.uid == userId && (
          (!('glucosePrediction' in request.resource.data) && !('metabolicAdvice' in request.resource.data)) ||
          (get(/databases/$(database)/documents/users/$(userId)).data.isPremium == true ||
           (get(/databases/$(database)/documents/users/$(userId)).data.subscriptionDetails.isActive == true))
        );
      }
    }
    match /foods/{foodId} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.token.admin == true;
    }
    match /payments/{paymentId} {
      allow read, write: if request.auth != null && request.auth.uid == resource.data.userId;
    
      allow read, write: if request.auth != null && request.auth.uid == resource.data.userId;
    }
  }

  match /databases/{database}/documents {
    // User profiles - users can only read/write their own data
    match /users/{userId} {
      allow read: if request.auth != null && request.auth.uid == userId;
        allow write: if request.auth != null && request.auth.uid == userId && (
          (!('glucosePrediction' in request.resource.data) && !('metabolicAdvice' in request.resource.data)) ||
          (get(/databases/$(database)/documents/users/$(userId)).data.isPremium == true ||
           (get(/databases/$(database)/documents/users/$(userId)).data.subscriptionDetails.isActive == true))
        );
      
      // Food scans - users can only access their own scans
      match /scans/{scanId} {
        allow read: if request.auth != null && request.auth.uid == userId;
        allow write: if request.auth != null && request.auth.uid == userId && (
          (!('glucosePrediction' in request.resource.data) && !('metabolicAdvice' in request.resource.data)) ||
          (get(/databases/$(database)/documents/users/$(userId)).data.isPremium == true ||
           (get(/databases/$(database)/documents/users/$(userId)).data.subscriptionDetails.isActive == true))
        );
      }
      
      // Subscriptions - users can only read their own subscriptions
      match /subscriptions/{subscriptionId} {
        allow read: if request.auth != null && request.auth.uid == userId;
        allow write: if false; // Only Cloud Functions can write subscriptions
      }
      
      // Transactions - users can only read their own transactions
      match /transactions/{transactionId} {
        allow read: if request.auth != null && request.auth.uid == userId;
        allow write: if false; // Only Cloud Functions can write transactions
      }
    }
    
    // Public nutritional data - readable by all authenticated users
    match /nutritionalData/{item} {
      allow read: if request.auth != null;
      allow write: if false; // Only admins can write via backend
    }

    // Knowledge base articles - readable by all authenticated users
    match /knowledgeBaseArticles/{articleId} {
      allow read: if request.auth != null;
      allow write: if false; // Only admins/backends can write
    }
  }
}
